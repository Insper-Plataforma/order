{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Order Interface","text":"<p>A interface <code>OrderController</code> define os contratos REST do microsservi\u00e7o de pedidos (<code>order-service</code>).</p> <p>Este m\u00f3dulo funciona como um Feign Client e permite opera\u00e7\u00f5es como:</p> <ul> <li>Criar um novo pedido</li> <li>Buscar todos os pedidos</li> <li>Buscar um pedido espec\u00edfico pelo ID</li> </ul> <p>Essa interface deve ser implementada pelo microsservi\u00e7o <code>order-service</code>.</p>"},{"location":"#objetivo","title":"Objetivo","text":"<p>Centralizar os contratos REST relacionados a pedidos, evitando duplica\u00e7\u00e3o de l\u00f3gica HTTP e facilitando a comunica\u00e7\u00e3o entre microsservi\u00e7os.</p>"},{"location":"#pacote","title":"Pacote","text":"<ul> <li><code>store.order</code> \u2013 Pacote principal que cont\u00e9m a interface Feign e os objetos de entrada e sa\u00edda.</li> </ul>"},{"location":"#estrutura-dos-arquivos","title":"Estrutura dos arquivos","text":"Arquivo Descri\u00e7\u00e3o <code>OrderController.java</code> Interface Feign com os endpoints dispon\u00edveis do microsservi\u00e7o de pedidos <code>OrderIn.java</code> Objeto de entrada para cria\u00e7\u00e3o de pedidos <code>OrderOut.java</code> Objeto de resposta contendo dados do pedido retornados pelo servi\u00e7o <code>OrderItemIn.java</code> Objeto de entrada para cria\u00e7\u00e3o dos itens dos pedidos <code>OrderItemOut.java</code> Objeto de resposta contendo dados do pediso completo"},{"location":"#integracao-com-jenkins","title":"Integra\u00e7\u00e3o com Jenkins","text":"<p>Este projeto conta com um arquivo Jenkinsfile (na raiz do reposit\u00f3rio) que define uma pipeline de integra\u00e7\u00e3o cont\u00ednua para compilar automaticamente o m\u00f3dulo sempre que houver altera\u00e7\u00f5es no reposit\u00f3rio.</p>"},{"location":"#para-que-serve","title":"Para que serve?","text":"<ul> <li> <p>Ao efetuar um push no reposit\u00f3rio, o Jenkins detecta a mudan\u00e7a e executa esta pipeline.</p> </li> <li> <p>A etapa Build faz a compila\u00e7\u00e3o do projeto:</p> </li> <li> <p>Executa mvn clean install em modo batch (par\u00e2metro -B), sem intera\u00e7\u00e3o de usu\u00e1rio.</p> </li> <li> <p>Pulando os testes (-DskipTests), gera rapidamente o artefato (JAR) do m\u00f3dulo de interface.</p> </li> <li> <p>Caso a compila\u00e7\u00e3o falhe, o Jenkins sinaliza erro, impedindo que altera\u00e7\u00f5es com problemas sejam mescladas ou implantadas.</p> </li> </ul> <p>Dessa forma, a integra\u00e7\u00e3o com Jenkins garante que o c\u00f3digo da interface Feign esteja sempre compilando corretamente antes de ser utilizado por outros microsservi\u00e7os.</p>"},{"location":"endpoints/","title":"Endpoints - Feign Interface <code>OrderController</code>","text":"<p>Todos os endpoints se referem ao microsservi\u00e7o <code>order</code> com base URL: <code>http://order:8080</code>.</p>"},{"location":"endpoints/#post-order","title":"POST <code>/order</code>","text":"<p>Cria um novo pedido para o usu\u00e1rio autenticado.</p> <ul> <li>Request body: <code>OrderIn</code></li> <li>Header: <code>id-account</code></li> <li>Response: <code>OrderOut</code></li> </ul>"},{"location":"endpoints/#get-order","title":"GET <code>/order</code>","text":"<p>Retorna todos os pedidos da base.</p> <ul> <li>Response: <code>List&lt;OrderOut&gt;</code></li> </ul>"},{"location":"endpoints/#get-orderidorder","title":"GET <code>/order/{idOrder}</code>","text":"<p>Busca os detalhes de um pedido espec\u00edfico.</p> <ul> <li>Path param: <code>idOrder</code></li> <li>Header: <code>id-account</code></li> <li>Response: <code>OrderOut</code></li> </ul>"},{"location":"entidades/","title":"Estrutura de pastas","text":"<pre><code>src/main/java/store/order/\n\u251c\u2500\u2500 OrderController.java  # Interface Feign\n\u251c\u2500\u2500 OrderIn.java          # DTO de entrada\n\u251c\u2500\u2500 OrderOut.java         # DTO de sa\u00edda\n\u251c\u2500\u2500 OrderItemIn.java      # DTO de entrada\n\u2514\u2500\u2500 OrderItemOut.java     # DTO de sa\u00edda\n</code></pre>"},{"location":"entidades/#orderin","title":"OrderIn","text":"<p>Representa um pedido de entrada.</p> <pre><code>record OrderIn(\n    List&lt;OrderItemIn&gt; items\n)\n</code></pre> <ul> <li><code>items</code>: Lista de itens do pedido.</li> </ul>"},{"location":"entidades/#orderitemin","title":"OrderItemIn","text":"<p>Item individual do pedido de entrada.</p> <pre><code>record OrderItemIn(\n    String idProduct,\n    int quantity\n)\n</code></pre> <ul> <li><code>idProduct</code>: ID do produto.</li> <li><code>quantity</code>: Quantidade do produto.</li> </ul>"},{"location":"entidades/#orderout","title":"OrderOut","text":"<p>Retorno completo de um pedido.</p> <pre><code>record OrderOut(\n    String id,\n    Date date,\n    List&lt;OrderItemOut&gt; items,\n    Double total\n)\n</code></pre> <ul> <li><code>id</code>: ID do pedido.</li> <li><code>date</code>: Data do pedido.</li> <li><code>items</code>: Lista de itens do pedido.</li> <li><code>total</code>: Valor total do pedido.</li> </ul>"},{"location":"entidades/#orderitemout","title":"OrderItemOut","text":"<p>Item do pedido com informa\u00e7\u00f5es do produto.</p> <pre><code>record OrderItemOut(\n    ProductOut product,\n    String id,\n    int quantity,\n    Double total\n)\n</code></pre> <ul> <li><code>product</code>: Produto associado ao item.</li> <li><code>id</code>: ID do item.</li> <li><code>quantity</code>: Quantidade do item.</li> <li><code>total</code>: Valor total do item.</li> </ul>"},{"location":"setup/","title":"Setup e depend\u00eancias","text":"<p>Este m\u00f3dulo define apenas a interface REST <code>OrderController</code> e os DTOs relacionados.</p>"},{"location":"setup/#como-compilar","title":"Como compilar","text":"<pre><code>mvn clean install\n</code></pre>"},{"location":"setup/#requisitos","title":"Requisitos","text":"<ul> <li>Java 17+</li> <li>Lombok</li> <li>Spring Web</li> <li>OpenFeign</li> </ul>"},{"location":"setup/#dependencias-no-pomxml","title":"Depend\u00eancias no <code>pom.xml</code>","text":"<ul> <li><code>spring-boot-starter-web</code></li> <li><code>spring-cloud-starter-openfeign</code></li> <li><code>lombok</code></li> </ul>"},{"location":"setup/#como-usar","title":"Como usar","text":"<p>Essa interface deve ser importada e implementada por um servi\u00e7o como o <code>order-service</code>. Em qualquer outro microsservi\u00e7o, pode ser utilizada como Feign Client para acessar endpoints do <code>order</code>.</p> <pre><code>@FeignClient(name = \"order\", url = \"http://order:8080\")\npublic interface OrderController {\n    // ...\n}\n</code></pre>"},{"location":"setup/#observacoes","title":"Observa\u00e7\u00f5es","text":"<ul> <li>O header <code>id-account</code> deve ser enviado em todas as requisi\u00e7\u00f5es para identificar o usu\u00e1rio autenticado.</li> <li>O DTO <code>OrderItemOut</code> depende de <code>ProductOut</code>, que deve ser importado do m\u00f3dulo <code>product</code>.</li> </ul>"}]}